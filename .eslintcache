[{"/Users/stephenmakilan/Documents/ReactJS/Scrimba/todo-app/src/index.js":"1","/Users/stephenmakilan/Documents/ReactJS/Scrimba/todo-app/src/components/MyInfo.js":"2","/Users/stephenmakilan/Documents/ReactJS/Scrimba/todo-app/src/App.js":"3","/Users/stephenmakilan/Documents/ReactJS/Scrimba/todo-app/src/AppMeme.js":"4","/Users/stephenmakilan/Documents/ReactJS/Scrimba/todo-app/src/reportWebVitals.js":"5","/Users/stephenmakilan/Documents/ReactJS/Scrimba/todo-app/src/components/MemeGenerator.js":"6","/Users/stephenmakilan/Documents/ReactJS/Scrimba/todo-app/src/components/Header.js":"7"},{"size":691,"mtime":1612617156411,"results":"8","hashOfConfig":"9"},{"size":327,"mtime":1612617156411,"results":"10","hashOfConfig":"9"},{"size":1264,"mtime":1612678643753,"results":"11","hashOfConfig":"9"},{"size":295,"mtime":1612617156409,"results":"12","hashOfConfig":"9"},{"size":362,"mtime":1612617156412,"results":"13","hashOfConfig":"9"},{"size":4241,"mtime":1612617156411,"results":"14","hashOfConfig":"9"},{"size":393,"mtime":1612617156410,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"712m9l",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/stephenmakilan/Documents/ReactJS/Scrimba/todo-app/src/index.js",["35","36"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport './style.css';\nimport App from './App';\nimport AppMeme from './AppMeme';\nimport reportWebVitals from './reportWebVitals';\n\nimport MyInfo from \"./components/MyInfo.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <AppMeme /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n  // ReactDOM.render(<App />, document.getElementById(\"root\"))\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();",["37","38"],"/Users/stephenmakilan/Documents/ReactJS/Scrimba/todo-app/src/components/MyInfo.js",["39"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nfunction MyInfo(){\n    return(\n      <div>\n        <h1>Stephen Makilans</h1>\n        <p>This is a test description.</p>\n        <ul>\n          <li>One</li>\n          <li>Two</li>\n          <li>Three</li>\n        </ul>\n      </div>\n    )\n  }\n\n\nexport default MyInfo","/Users/stephenmakilan/Documents/ReactJS/Scrimba/todo-app/src/App.js",[],"/Users/stephenmakilan/Documents/ReactJS/Scrimba/todo-app/src/AppMeme.js",["40"],"import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport MemeGenerator from \"./components/MemeGenerator\";\n\n function AppMeme() {\n     return(\n         <div>\n            <Header />\n            <MemeGenerator />\n         </div>\n     )\n }\n\n export default AppMeme;","/Users/stephenmakilan/Documents/ReactJS/Scrimba/todo-app/src/reportWebVitals.js",[],"/Users/stephenmakilan/Documents/ReactJS/Scrimba/todo-app/src/components/MemeGenerator.js",["41","42"],"\n/**\n * Other modern/advanced React features/topics to learn:\n * \n * Official React Context API - https://reactjs.org/docs/context.html\n * Error Boundaries - https://reactjs.org/docs/error-boundaries.html\n * render props - https://reactjs.org/docs/render-props.html\n * Higher Order Components - https://reactjs.org/docs/higher-order-components.html\n * React Router - https://reacttraining.com/react-router/core/guides/philosophy\n * React Hooks - https://reactjs.org/docs/hooks-intro.html\n * React lazy, memo, and Suspense - https://reactjs.org/blog/2018/10/23/react-v-16-6.html\n */\n\n\nimport React, { Component } from \"react\";\n\nclass MemeGenerator extends Component{\n\n    //in modern version, constructor can be removed if you use this state type initialization\n    state = {\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\",\n        allMemeImgs: []\n    };\n\n        // constructor(){\n        //     super();\n        //     this.state = {\n        //         topText: \"\",\n        //         bottomText: \"\",\n        //         randomImage: \"http://i.imgflip.com/1bij.jpg\",\n        //         allMemeImgs: []\n        //     }\n\n            // this.HandleChange = this.HandleChange.bind(this)\n            // this.HandleSubmit = this.HandleSubmit.bind(this)\n        // }\n\n    render (){\n        return(\n            <div>MEME GENERATOR</div>\n        )\n    }\n\n    componentDidMount(){\n        const url = \"https://api.imgflip.com/get_memes\";\n        fetch(url).then(response => response.json())\n                .then(response => {\n                    this.setState(\n                        {\n                            allMemeImgs: response.data.memes\n                        }\n                    )\n                });\n    }\n\n    //changed to lambda expression, no need to bind in constructor\n    HandleChange = (event) => {\n        const {name, value, placeholder} = event.target\n        this.setState(prevState => {\n            return{\n                [name]: value\n            }});\n    }\n\n    // HandleChange(event){\n    //     const {name, value, placeholder} = event.target\n    //     this.setState(prevState => {\n    //         return{\n    //             [name]: value\n    //         }\n    //     })\n\n    //     console.log(this.state);\n    // }\n\n    \n    //changed to lambda expression, no need to bind in constructor\n    HandleSubmit = (event) => {\n        event.preventDefault();\n        \n        const randNum = Math.floor(Math.random() * this.state.randomImage.length);\n        const randImg = this.state.allMemeImgs[randNum].url\n        console.log(randImg);   \n\n        this.setState({ randomImage: randImg } )\n    }\n\n    // HandleSubmit(event){\n    //     event.preventDefault();\n        \n    //     const randNum = Math.floor(Math.random() * this.state.randomImage.length);\n    //     const randImg = this.state.allMemeImgs[randNum].url\n    //     console.log(randImg);   \n\n    //     this.setState({ randomImage: randImg } )\n    // }\n\n    render(){\n        return(\n            <div>\n                <form className=\"meme-form\" onSubmit={this.HandleSubmit}>\n                    <label>\n                        <input\n                            type=\"text\"\n                            onChange={this.HandleChange}\n                            placeholder=\"Top text\"\n                            name=\"topText\"\n                            value={this.state.topText}\n                        />\n                    </label>\n                    <label>\n                        <input\n                            type=\"text\"\n                            onChange={this.HandleChange}\n                            placeholder=\"Bottom text\"\n                            name=\"bottomText\"\n                            value={this.state.bottomText}\n                        />\n                    </label>\n                    <button>Gen</button>\n                </form>\n                <div className=\"meme\">\n                    <img src={this.state.randomImage} alt=\"\" />\n                    <h2 className=\"top\">{this.state.topText}</h2>\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MemeGenerator;","/Users/stephenmakilan/Documents/ReactJS/Scrimba/todo-app/src/components/Header.js",[],{"ruleId":"43","severity":1,"message":"44","line":6,"column":8,"nodeType":"45","messageId":"46","endLine":6,"endColumn":15},{"ruleId":"43","severity":1,"message":"47","line":9,"column":8,"nodeType":"45","messageId":"46","endLine":9,"endColumn":14},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"43","severity":1,"message":"52","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":16},{"ruleId":"43","severity":1,"message":"53","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":26},{"ruleId":"43","severity":1,"message":"54","line":60,"column":29,"nodeType":"45","messageId":"46","endLine":60,"endColumn":40},{"ruleId":"55","severity":1,"message":"56","line":100,"column":5,"nodeType":"57","messageId":"58","endLine":131,"endColumn":6},"no-unused-vars","'AppMeme' is defined but never used.","Identifier","unusedVar","'MyInfo' is defined but never used.","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"'ReactDOM' is defined but never used.","'Component' is defined but never used.","'placeholder' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'render'.","MethodDefinition","unexpected","no-global-assign","no-unsafe-negation"]